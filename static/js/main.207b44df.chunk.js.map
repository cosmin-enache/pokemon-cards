{"version":3,"sources":["components/pokemon-card/pokemon-card.component.jsx","components/pokemon-board/pokemon-board.component.jsx","components/pokemon-form/pokemon-form.component.jsx","logo.svg","App.js","reportWebVitals.js","index.js"],"names":["PokemonCard","name","src","Col","xs","md","lg","className","alt","PokemonBoard","props","Container","Row","this","generatePokemonCards","pokemon","reduce","a","i","push","imageUrl","Component","PokemonForm","handleChange","addPokemonToBoard","Form","Control","type","placeholder","onChange","e","searchExisting","target","value","InputGroup","FormControl","id","aria-describedby","Append","Button","variant","onClick","addNameValue","document","querySelector","App","state","retrievePokemonCardData","filteredPokemon","n","toLowerCase","includes","searchText","setState","pNameToAdd","validPokemon","v","alert","operationIsValid","pokemonEntry","success","getPokemonImgUrl","call","console","log","pokemonName","fetch","then","response","json","data","secondUrl","forms","url","imgUrl","sprites","front_default","currentPokemonList","slice","newPokemonData","capitalize","message","toUpperCase","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.207b44df.chunk.js","sourcesContent":["import { Col } from \"react-bootstrap\"\r\n\r\nexport const PokemonCard = ({ name, src }) => {\r\n    return (\r\n        <Col xs={12} md={6} lg={4}>\r\n            <article className=\"pokemon-card\">\r\n                <div className=\"img-container\">\r\n                    <img alt={name} src={src} />\r\n                </div>\r\n                <h2 className=\"font-weight-normal\">{name}</h2>\r\n            </article>\r\n        </Col>\r\n    );\r\n}\r\n","import React, { Component, Fragment } from 'react';\r\nimport { PokemonCard } from '../pokemon-card/pokemon-card.component.jsx';\r\nimport { Container, Row } from \"react-bootstrap\"\r\n\r\nexport class PokemonBoard extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    render () {\r\n        return (\r\n            <Container className=\"pokemon-board\">\r\n                <Row>\r\n                    {this.generatePokemonCards()}\r\n                </Row>\r\n            </Container>\r\n        );\r\n    }\r\n    generatePokemonCards() {\r\n        return this.props.pokemon.reduce((a, pokemon, i) => {\r\n            a.push(\r\n                <PokemonCard key={i} name={pokemon.name}\r\n                             src={pokemon.imageUrl} />\r\n            );\r\n            return a;\r\n        }, []);\r\n    }\r\n}\r\n","import React, { Fragment } from \"react\";\r\nimport { Button, Form, FormControl, InputGroup} from \"react-bootstrap\"\r\n\r\nexport function PokemonForm({ handleChange, addPokemonToBoard }) {\r\n    const handleClick = () => {\r\n        const addNameValue = document.querySelector(\"#add-pokemon-input\").value;\r\n\r\n        addPokemonToBoard(addNameValue);\r\n    }\r\n\r\n    const handleInputChange = e => {\r\n        handleChange({searchExisting: e.target.value});\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <Form.Control\r\n                type=\"search\"\r\n                className=\"text-input\"\r\n                placeholder=\"Search Pokemon\"\r\n                onChange={handleInputChange}\r\n            />\r\n            <InputGroup className=\"mb-3 text-input\">\r\n                <FormControl\r\n                  id=\"add-pokemon-input\"\r\n                  placeholder=\"Add pokemon to list EG: Wartortle\"\r\n                  aria-describedby=\"basic-addon2\"\r\n                />\r\n                <InputGroup.Append>\r\n                  <Button\r\n                      variant=\"primary\"\r\n                      onClick={handleClick}\r\n                  >Add Pokemon</Button>\r\n                </InputGroup.Append>\r\n            </InputGroup>\r\n        </Fragment>\r\n    );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { Component, Fragment } from 'react'\nimport { PokemonCard } from './components/pokemon-card/pokemon-card.component.jsx'\nimport { PokemonBoard } from './components/pokemon-board/pokemon-board.component.jsx'\nimport { PokemonForm } from \"./components/pokemon-form/pokemon-form.component.jsx\"\nimport logo from './logo.svg';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nclass App extends Component {\n    constructor() {\n        super();\n\n        this.state = {\n            pokemon: [],\n            searchExisting: \"\"\n        };\n    }\n    componentDidMount() {\n        // just read in all the pokemon you want to start with here\n        const validPokemon = [\"pikachu\", \"bulbasaur\", \"squirtle\"];\n\n        this.retrievePokemonCardData(validPokemon);\n    }\n    render() {\n        const { pokemon, searchExisting } = this.state;\n        const filteredPokemon = pokemon.reduce((a, n) => {\n            if (n.name.toLowerCase().includes(searchExisting.toLowerCase())) {\n                a.push(n);\n            }\n            return a;\n        }, []);\n\n        return (\n            <Fragment>\n                <PokemonForm\n                    handleChange={(searchText) => this.setState(searchText)}\n                    addPokemonToBoard={(pNameToAdd) => this.addPokemonToBoard(pNameToAdd)}\n                />\n                <PokemonBoard pokemon={filteredPokemon} />\n            </Fragment>\n        );\n    }\n    addPokemonToBoard(name) {\n        this.retrievePokemonCardData([name.toLowerCase()]);\n    }\n    retrievePokemonCardData(validPokemon) {\n        const { pokemon } = this.state;\n\n        if (!operationIsValid()) return false;\n\n        for (const pokemonEntry of validPokemon) {\n            const success = getPokemonImgUrl.call(this, pokemonEntry);\n\n            console.log(\"succ\", success);\n        }\n\n        return true;\n\n        function operationIsValid() {\n            try {\n                if (validPokemon[0] == false) {\n                    throw \"Invalid pokemon name!\";\n                }\n                if (pokemonAlreadyAdded()) {\n                    throw \"Pokemon already in list!\";\n                }\n                return true;\n            } catch (e) {\n                alert(e);\n            }\n        }\n\n        async function getPokemonImgUrl(pokemonName) {\n            try {\n                const baseSearchUrl = \"https://pokeapi.co/api/v2/pokemon/\";\n\n                let secondUrl;\n\n                await fetch(baseSearchUrl + pokemonName)\n                .then(response => response.json())\n                .then(data => secondUrl = data.forms[0].url);\n\n                let imgUrl;\n\n                await fetch(secondUrl)\n                .then(response => response.json())\n                .then(data => imgUrl = data.sprites.front_default);\n\n                const currentPokemonList = this.state.pokemon.slice();\n\n                const newPokemonData = {\n                    name: capitalize(pokemonName),\n                    imageUrl: imgUrl\n                };\n\n                currentPokemonList.push(newPokemonData);\n                this.setState({pokemon: currentPokemonList});\n\n            } catch (e) {\n                alert(\"Pokemon name invalid!\");\n                console.log(\"Error => \" + e.message);\n            }\n        }\n\n        // utility\n        function capitalize(name) {\n            return name.slice(0, 1).toUpperCase() + name.slice(1);\n        }\n\n        function pokemonAlreadyAdded() {\n            return pokemon.reduce((a, v) => {\n                if (v.name.toLowerCase() === validPokemon[0].toLowerCase()) {\n                    a = true;\n                }\n\n                return a;\n            }, false)\n        }\n    }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}